@model IEnumerable<AppDelBagno.Models.Bagno>

@{
    ViewData["Title"] = "Index";
}


<h1>Gestione Bagno</h1>

@if (ViewBag.bagno != null && ViewBag.bagno.Utente != Environment.UserName)
{
    <h5>Bagno occupato da: @ViewBag.bagno.Utente</h5>
}

@*
ViewBag.bagno = is_Bloccato();
ViewBag.Coda = await _context.Coda.ToListAsync();
ViewBag.SonoInCoda = IAmInQueue();
ViewBag.FirstQueue = FirstInQueue();
*@

@if((ViewBag.FirstQueue == null && ViewBag.bagno == null)
|| (ViewBag.FirstQueue != null && ViewBag.bagno == null && ViewBag.FirstQueue.Username == Environment.UserName))
{
    <a asp-action="LockBagno"><button type="button" class="btn btn-success sendmessage" value="send">Blocca</button></a>
}
else if (ViewBag.bagno != null &&  ViewBag.bagno.Utente != Environment.UserName)
{
    @if (!ViewBag.SonoInCoda)
    {
        <a asp-action="AddMeToQueue"><button type="button" class="btn btn-success sendmessage" value="send">Aggiungimi in coda</button></a>
    }
    else{
        <a asp-action="DeleteMeToQueue"><button type="button" class="btn btn-danger sendmessage" value="send">Rimuovi dalla coda</button></a>
    }
}
else if (ViewBag.bagno != null &&  ViewBag.bagno.Utente == Environment.UserName)
{
    <a asp-action="UnlockBagno"><button type="button" class="btn btn-danger sendmessage" value="send">Sblocca</button></a>
}








<table class="table" id="QueueTable">
    <thead>
        <tr>
            <th>
                Utente
            </th>
            <th>
                Ora prenotazione
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Coda item in ViewBag.Coda) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Utente)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.datetime)
            </td>

        </tr>
        }
    </tbody>
</table>





    
<!--Script references. -->
<!--Reference the SignalR library. -->
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
<!--Add script to update the page and send messages.-->
<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {



        // Get the user name and store it to prepend to messages.
        var name = "malemale";
        // Set initial focus to message input box.

        // Start the connection.
        var connection = new signalR.HubConnectionBuilder()
                            .withUrl('/chat')
                            .build();

        // Create a function that the hub can call to broadcast messages.
        connection.on('broadcastMessage', function (name, message) {


            if(message == "reload")
            {
                location.reload();
            }
            
        });

        // Transport fallback functionality is now built into start.
        connection.start()
            .then(function () {
                console.log('connection started');
                document.getElementsByClassName('sendmessage').addEventListener('click', function (event) {
                    // Call the Send method on the hub.
                    connection.invoke('send', name, "reaload");

                    // Clear text box and reset focus for next comment.
                    event.preventDefault();
                });
        })
        .catch(error => {
            console.error(error.message);
        });
    });
</script>